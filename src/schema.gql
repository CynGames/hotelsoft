# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Reservation {
  reservationID: ID!
  userID: ID!
  roomID: ID!
  checkIn: DateTime!
  checkOut: DateTime!
  status: ReservationStatus!
  findUser: User
  findRoom: Room
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum ReservationStatus {
  Confirmed
  Cancelled
  Pending
}

type User {
  userID: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phoneNumber: String!
  isActive: Boolean
  roles: [ValidRoles!]
  findReservation: [Reservation!]
}

enum ValidRoles {
  Guest
  Supervisor
  Admin
}

type Room {
  roomID: ID!
  type: RoomType!
  price: Float!
  status: RoomStatus!
  findReservation: [Reservation!]
}

enum RoomType {
  Single
  Double
  Suite
}

enum RoomStatus {
  Available
  Booked
  Occupied
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  findAllReservations: [Reservation!]!
  findManyReservations(params: FindManyReservationInput!): [Reservation!]!
  findOneReservation(reservationID: ID!): Reservation!
  findCurrentUserReservation: Reservation!
  findAllUsers: [User!]!
  findOneUserByEmail(email: String!): User!
  findAllRooms: [Room!]!
  findManyRooms(params: FindManyRoomInput!): [Room!]!
  findOneRoom(roomID: ID!): Room!
  revalidate: AuthResponse!
}

input FindManyReservationInput {
  reservationID: ID
  userID: ID
  roomID: ID
  checkIn: DateTime
  checkOut: DateTime
  status: ReservationStatus
}

input FindManyRoomInput {
  roomID: ID
  type: RoomType
  price: Float
  status: RoomStatus
}

type Mutation {
  createReservation(createReservationInput: CreateReservationInput!): Reservation!
  updateReservation(reservationID: String!, updateReservationInput: UpdateReservationInput!): Reservation!
  removeReservation(reservationID: String!): Reservation!
  blockUser(userID: ID!): User!
  unblockUser(userID: ID!): User!
  createRoom(createRoomInput: CreateRoomInput!): Room!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
  removeRoom(roomID: String!): Room!
  signup(signupInput: SignupInput!): AuthResponse!
  login(login: LoginInput!): AuthResponse!
  executeSeed: Boolean!
}

input CreateReservationInput {
  userID: ID!
  roomID: ID!
  checkIn: DateTime!
  checkOut: DateTime!
  status: ReservationStatus!
}

input UpdateReservationInput {
  userID: ID
  roomID: ID
  checkIn: DateTime
  checkOut: DateTime
  status: ReservationStatus
}

input CreateRoomInput {
  type: RoomType!
  price: Float!
  status: RoomStatus!
}

input UpdateRoomInput {
  type: RoomType
  price: Float
  status: RoomStatus
  roomID: ID!
}

input SignupInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}