generator client {
  provider      = "prisma-client-js"
  binaryTargets = [env("PRISMA_BINARY_TARGETS")]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID       String        @id @default(uuid())
  firstName    String
  lastName     String?
  email        String        @unique
  password     String
  phoneNumber  String?
  isActive     Boolean?
  roles        ValidRoles[]
  reservations Reservation[]
}

model Room {
  roomID      String        @id @default(uuid())
  type        RoomType
  price       Decimal
  status      RoomStatus
  Reservation Reservation[]
}

model Reservation {
  reservationID String            @id @default(uuid())
  userID        String?
  roomID        String?
  checkIn       DateTime
  checkOut      DateTime
  status        ReservationStatus
  user          User?             @relation(fields: [userID], references: [userID])
  room          Room?             @relation(fields: [roomID], references: [roomID])
}

enum ValidRoles {
  Guest
  Supervisor
  Admin
}

enum RoomType {
  Single
  Double
  Suite
}

enum RoomStatus {
  Available
  Booked
  Occupied
}

enum ReservationStatus {
  Confirmed
  Cancelled
  Pending
}

// model Guest {
//   guestID      String        @id @default(uuid())
//   firstName    String
//   lastName     String?
//   email        String        @unique
//   phoneNumber  String?
//   reservations Reservation[]
// }
//
// model User {
//   userID   String       @id @default(uuid())
//   username String
//   password String
//   email    String       @unique
//   isActive Boolean?
//   roles    ValidRoles[]
// }
//
// model Invoice {
//   invoiceID     String        @id @default(uuid())
//   reservationID String?
//   amount        Decimal
//   status        InvoiceStatus
//   date          DateTime
// }
//
// model Payment {
//   paymentID String        @id @default(uuid())
//   invoiceID String?
//   amount    Decimal
//   method    PaymentMethod
//   date      DateTime
// }
//
// model Maintenance {
//   maintenanceID String            @id @default(uuid())
//   roomID        String?
//   description   String?
//   status        MaintenanceStatus
//   scheduledDate DateTime
// }
//
// enum InvoiceStatus {
//   Paid
//   Unpaid
// }
//
// enum PaymentMethod {
//   Cash
//   CreditCard
//   DebitCard
//   PayPal
//   Venmo
//   Zelle
//   ApplePay
//   GooglePay
//   Bitcoin
//   Ethereum
//   Other
// }
//
// enum MaintenanceStatus {
//   Scheduled
//   InProgress
//   Completed
//   Cancelled
// }
