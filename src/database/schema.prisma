generator client {
  provider      = "prisma-client-js"
  binaryTargets = [env("PRISMA_BINARY_TARGETS")]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guest {
  guestID      String        @id @default(uuid())
  firstName    String
  lastName     String?
  email        String        @unique
  phoneNumber  String?
  reservations Reservation[]
}

model Room {
  roomID String     @id @default(uuid())
  type   String
  price  Decimal
  status RoomStatus
}

model Reservation {
  reservationID String            @id @default(uuid())
  guestID       String?
  roomID        String?
  checkIn       DateTime
  checkOut      DateTime
  status        ReservationStatus
  guest         Guest?            @relation(fields: [guestID], references: [guestID])
}

model Invoice {
  invoiceID     String        @id @default(uuid())
  reservationID String?
  amount        Decimal
  status        InvoiceStatus
  date          DateTime
}

model Payment {
  paymentID String        @id @default(uuid())
  invoiceID String?
  amount    Decimal
  method    PaymentMethod
  date      DateTime
}

model Maintenance {
  maintenanceID String            @id @default(uuid())
  roomID        String?
  description   String?
  status        MaintenanceStatus
  scheduledDate DateTime
}

model User {
  userID   String       @id @default(uuid())
  username String
  password String
  isActive Boolean?
  email    String       @unique
  roles    ValidRoles[]
}

enum RoomStatus {
  Available
  Booked
  Occupied
}

enum ReservationStatus {
  Confirmed
  Cancelled
  Pending
}

enum InvoiceStatus {
  Paid
  Unpaid
}

enum PaymentMethod {
  Cash
  CreditCard
  DebitCard
  PayPal
  Venmo
  Zelle
  ApplePay
  GooglePay
  Bitcoin
  Ethereum
  Other
}

enum MaintenanceStatus {
  Scheduled
  InProgress
  Completed
  Cancelled
}

enum ValidRoles {
  USER
  SUPERVISOR
  ADMIN
}
